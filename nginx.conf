events {
    worker_connections 1024;
}

http {
    # 添加 MIME 类型支持
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 添加 upstream 配置
    upstream backend_servers {
        server backend:4000;
    }

    upstream frontend_servers {
        server frontend:3000;
    }

    server {
        listen 80;
        server_name localhost;

        # Global CORS settings
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
        add_header 'Access-Control-Expose-Headers' '*' always;

        # Handle OPTIONS requests
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # 图片文件
        location /images/ {
            alias /usr/share/nginx/html/images/;
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }

        # 处理旧的图片路径
        location /api/images/ {
            proxy_pass http://backend:4000/api/images/;
            proxy_cache_bypass $http_upgrade;
            expires 30d;
            add_header Cache-Control "public, no-transform";
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # 静态文件路径
        location /static/ {
            proxy_pass http://frontend_servers/tuiter/static/;
        }

        # manifest.json
        location = /manifest.json {
            proxy_pass http://frontend_servers/tuiter/manifest.json;
        }

        # API endpoints
        location /api/ {
            proxy_pass http://backend_servers/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # 前端应用
        location /tuiter/ {
            proxy_pass http://frontend_servers/tuiter/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # 处理没有尾斜杠的 /tuiter 请求
        location = /tuiter {
            return 301 /tuiter/;
        }

        # 处理根路径重定向
        location = / {
            return 301 /tuiter/;
        }

        # WebSocket 支持
        location /ws {
            proxy_pass http://backend:4000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }
    }
} 